"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
require("rxjs/add/operator/filter");
require("rxjs/add/operator/first");
var core_1 = require("@angular/core");
var event_replayer_1 = require("./event.replayer");
function eventReplayerFactory(replayer, opts) {
    return function () {
        // todo: add option for PrebootReplayOptions where user can dictate
        // when events replayed
        if (!opts.noReplay) {
            replayer.replayAll();
        }
    };
}
exports.eventReplayerFactory = eventReplayerFactory;
exports.PREBOOT_REPLAY_OPTIONS = new core_1.InjectionToken('PrebootReplayOptions');
// only thing this does is replay events
var BrowserPrebootModule = BrowserPrebootModule_1 = (function () {
    function BrowserPrebootModule() {
    }
    // user can override the default preboot options by passing them in here
    BrowserPrebootModule.replayEvents = function (opts) {
        if (opts === void 0) { opts = {}; }
        return {
            ngModule: BrowserPrebootModule_1,
            providers: [
                event_replayer_1.EventReplayer,
                { provide: exports.PREBOOT_REPLAY_OPTIONS, useValue: opts },
                {
                    // run this once the app as bootstrapped
                    provide: core_1.APP_BOOTSTRAP_LISTENER,
                    // generate the inline preboot code and inject it into the document
                    useFactory: eventReplayerFactory,
                    multi: true,
                    // we need access to the document and renderer
                    deps: [event_replayer_1.EventReplayer, exports.PREBOOT_REPLAY_OPTIONS]
                }
            ]
        };
    };
    return BrowserPrebootModule;
}());
BrowserPrebootModule = BrowserPrebootModule_1 = __decorate([
    core_1.NgModule()
], BrowserPrebootModule);
exports.BrowserPrebootModule = BrowserPrebootModule;
var BrowserPrebootModule_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvd3Nlci1wcmVib290Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImJyb3dzZXItcHJlYm9vdC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxvQ0FBa0M7QUFDbEMsbUNBQWlDO0FBQ2pDLHNDQUt1QjtBQUV2QixtREFBaUQ7QUFFakQsOEJBQXFDLFFBQXVCLEVBQUUsSUFBMEI7SUFDdEYsTUFBTSxDQUFDO1FBRUwsbUVBQW1FO1FBQ25FLHVCQUF1QjtRQUN2QixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ25CLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUN2QixDQUFDO0lBQ0gsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQVRELG9EQVNDO0FBRVksUUFBQSxzQkFBc0IsR0FBRyxJQUFJLHFCQUFjLENBQXVCLHNCQUFzQixDQUFDLENBQUM7QUFFdkcsd0NBQXdDO0FBRXhDLElBQWEsb0JBQW9CO0lBQWpDO0lBeUJBLENBQUM7SUF2QkMsd0VBQXdFO0lBQ2pFLGlDQUFZLEdBQW5CLFVBQW9CLElBQStCO1FBQS9CLHFCQUFBLEVBQUEsU0FBK0I7UUFFakQsTUFBTSxDQUFDO1lBQ0wsUUFBUSxFQUFFLHNCQUFvQjtZQUM5QixTQUFTLEVBQUU7Z0JBQ1QsOEJBQWE7Z0JBQ2IsRUFBRSxPQUFPLEVBQUUsOEJBQXNCLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRTtnQkFDbkQ7b0JBQ0Usd0NBQXdDO29CQUN4QyxPQUFPLEVBQUUsNkJBQXNCO29CQUUvQixtRUFBbUU7b0JBQ25FLFVBQVUsRUFBRSxvQkFBb0I7b0JBRWhDLEtBQUssRUFBRSxJQUFJO29CQUVYLDhDQUE4QztvQkFDOUMsSUFBSSxFQUFFLENBQUMsOEJBQWEsRUFBRSw4QkFBc0IsQ0FBQztpQkFDOUM7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDO0lBQ0gsMkJBQUM7QUFBRCxDQUFDLEFBekJELElBeUJDO0FBekJZLG9CQUFvQjtJQURoQyxlQUFRLEVBQUU7R0FDRSxvQkFBb0IsQ0F5QmhDO0FBekJZLG9EQUFvQiJ9