"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var platform_server_1 = require("@angular/platform-server");
var inline_preboot_code_1 = require("./inline.preboot.code");
function loadPrebootFactory(state, rendererFactory, opts) {
    return function () {
        var doc = state.getDocument();
        var inlinePrebootCode = inline_preboot_code_1.getInlinePrebootCode(opts);
        addInlineCodeToDocument(inlinePrebootCode, doc, rendererFactory);
    };
}
exports.loadPrebootFactory = loadPrebootFactory;
exports.PREBOOT_RECORD_OPTIONS = new core_1.InjectionToken('PrebootRecordOptions');
// only thing this does is modify the document
var ServerPrebootModule = ServerPrebootModule_1 = (function () {
    function ServerPrebootModule() {
    }
    // user can override the default preboot options by passing them in here
    ServerPrebootModule.recordEvents = function (opts) {
        if (opts === void 0) { opts = { appRoot: 'app-root' }; }
        return {
            ngModule: ServerPrebootModule_1,
            providers: [
                { provide: exports.PREBOOT_RECORD_OPTIONS, useValue: opts },
                {
                    // this likely will never be injected but need something to run the
                    // factory function
                    provide: core_1.APP_BOOTSTRAP_LISTENER,
                    // generate the inline preboot code and inject it into the document
                    useFactory: loadPrebootFactory,
                    multi: true,
                    // we need access to the document and renderer
                    deps: [platform_server_1.PlatformState, core_1.RendererFactory2, exports.PREBOOT_RECORD_OPTIONS]
                }
            ]
        };
    };
    return ServerPrebootModule;
}());
ServerPrebootModule = ServerPrebootModule_1 = __decorate([
    core_1.NgModule()
], ServerPrebootModule);
exports.ServerPrebootModule = ServerPrebootModule;
function addInlineCodeToDocument(inlineCode, doc, rendererFactory) {
    var renderType = { id: '-1', encapsulation: core_1.ViewEncapsulation.None, styles: [], data: {} };
    var renderer = rendererFactory.createRenderer(doc, renderType);
    var script = renderer.createElement('script');
    renderer.setValue(script, inlineCode);
    renderer.insertBefore(doc.head, script, doc.head.firstChild);
}
exports.addInlineCodeToDocument = addInlineCodeToDocument;
var ServerPrebootModule_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmVyLXByZWJvb3QubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2VydmVyLXByZWJvb3QubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsc0NBUXVCO0FBQ3ZCLDREQUF5RDtBQUV6RCw2REFBNkQ7QUFFN0QsNEJBQ0UsS0FBb0IsRUFDcEIsZUFBaUMsRUFDakMsSUFBMEI7SUFFMUIsTUFBTSxDQUFDO1FBQ0wsSUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2hDLElBQU0saUJBQWlCLEdBQUcsMENBQW9CLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckQsdUJBQXVCLENBQUMsaUJBQWlCLEVBQUUsR0FBRyxFQUFFLGVBQWUsQ0FBQyxDQUFDO0lBQ25FLENBQUMsQ0FBQztBQUNKLENBQUM7QUFWRCxnREFVQztBQUVZLFFBQUEsc0JBQXNCLEdBQUcsSUFBSSxxQkFBYyxDQUF1QixzQkFBc0IsQ0FBQyxDQUFDO0FBRXZHLDhDQUE4QztBQUU5QyxJQUFhLG1CQUFtQjtJQUFoQztJQXlCQSxDQUFDO0lBdkJDLHdFQUF3RTtJQUNqRSxnQ0FBWSxHQUFuQixVQUFvQixJQUFvRDtRQUFwRCxxQkFBQSxFQUFBLFNBQStCLE9BQU8sRUFBRSxVQUFVLEVBQUU7UUFDdEUsTUFBTSxDQUFDO1lBQ0wsUUFBUSxFQUFFLHFCQUFtQjtZQUM3QixTQUFTLEVBQUU7Z0JBQ1QsRUFBRSxPQUFPLEVBQUUsOEJBQXNCLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRTtnQkFDbkQ7b0JBRUUsbUVBQW1FO29CQUNuRSxtQkFBbUI7b0JBQ25CLE9BQU8sRUFBRSw2QkFBc0I7b0JBRS9CLG1FQUFtRTtvQkFDbkUsVUFBVSxFQUFFLGtCQUFrQjtvQkFFOUIsS0FBSyxFQUFFLElBQUk7b0JBRVgsOENBQThDO29CQUM5QyxJQUFJLEVBQUUsQ0FBQywrQkFBYSxFQUFFLHVCQUFnQixFQUFFLDhCQUFzQixDQUFDO2lCQUNoRTthQUNGO1NBQ0YsQ0FBQztJQUNKLENBQUM7SUFDSCwwQkFBQztBQUFELENBQUMsQUF6QkQsSUF5QkM7QUF6QlksbUJBQW1CO0lBRC9CLGVBQVEsRUFBRTtHQUNFLG1CQUFtQixDQXlCL0I7QUF6Qlksa0RBQW1CO0FBMkJoQyxpQ0FBd0MsVUFBa0IsRUFBRSxHQUFhLEVBQUUsZUFBaUM7SUFDMUcsSUFBTSxVQUFVLEdBQWtCLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxhQUFhLEVBQUUsd0JBQWlCLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQzVHLElBQU0sUUFBUSxHQUFHLGVBQWUsQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ2pFLElBQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEQsUUFBUSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDdEMsUUFBUSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQy9ELENBQUM7QUFORCwwREFNQyJ9